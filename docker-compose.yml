services:
  nginx:
    hostname: nginx
    image: nginx
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
      - phpmyadmin
    networks:
      - frontend
      - backend
      - phpmyadmin
    ports:
      - "80:80"

  frontend:
    hostname: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    volumes:
      - ./frontend/source:/workspace
      - node_modules:/workspace/node_modules
    
    #　【フロントエンド】 サーバー起動手動化コマンド。自動化するときはコメントアウト
    command: /bin/bash -c "/bin/bash"
    
    tty: true
    expose:
      - '3000'
    networks:
      - frontend
      - backend
    
  backend:
    hostname: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_NAME=${MYSQL_NAME}
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_PORT=${MYSQL_PORT}
    volumes:
      - ./backend/source:/workspace
    
    #　【バックエンド】 サーバー起動手動化コマンド。自動化するときはコメントアウト
    command: /bin/bash -c "/bin/bash"
    
    tty: true
    expose:
      - '8000'
    networks:
      - backend
      - mysql
    
  mysql:
    image: mysql:8.4
    container_name: mysql
    volumes:
      - mysql_db:/var/lib/mysql
      - ./initdb.d:/docker-entrypoint-initdb.d
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
    expose:
      - '3306'
    networks:
      - mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -u${MYSQL_USER} -p${MYSQL_PASSWORD}"]
      interval: 30s
      retries: 5
      start_period: 30s
      timeout: 10s
  
  phpmyadmin:
    image: phpmyadmin
    depends_on:
      - mysql
    container_name: phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_ABSOLUTE_URI: "http://localhost/phpmyadmin/"
    expose:
      - '80'
    networks:
      - phpmyadmin
      - mysql

volumes:
  mysql_db:
  node_modules:

networks:
  frontend:
  backend:
  mysql:
  phpmyadmin: